syntax="proto3";
package database;

option go_package="github.com/sarthak0714/dbz";

service Database {
    rpc Get(GetRequest) returns (GetResponse) {}
    rpc Put(PutRequest) returns (PutResponse) {}
    rpc Delete(DeleteRequest) returns (DeleteResponse) {}
    rpc PrepareTransaction(PrepareRequest) returns (PrepareResponse) {}
    rpc CommitTransaction(CommitRequest) returns (CommitResponse) {}
    rpc AbortTransaction(AbortRequest) returns (AbortResponse) {}
}

service Replication {
    rpc Replicate(stream ReplicationUpdate) returns (stream ReplicationAck) {}
}

message GetRequest {
    string key = 1;
}

message GetResponse {
    string value = 1;
}

message PutRequest {
    string key = 1;
    string value = 2;
}

message PutResponse {
    bool success = 1;
}

message DeleteRequest {
    string key = 1;
}

message DeleteResponse {
    bool success = 1;
}

message PrepareRequest {
    repeated string keys = 1;
}

message PrepareResponse {
    bool ready = 1;
}

message CommitRequest {
    map<string, string> updates = 1;
}

message CommitResponse {
    bool success = 1;
}

message AbortRequest {
    repeated string keys = 1;
}

message AbortResponse {
    bool success = 1;
}

message ReplicationUpdate {
    string key = 1;
    string value = 2;
}

message ReplicationAck {
    bool success = 1;
}